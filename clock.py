import time

# if hour digit is of length 1, add this for padding

displaydict = {
  "lead" : [
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.'],
      ['.', '.', '.', '.', '.', '.', '.', '.']
    ],

  
  "0" : [
      ['.', '.', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', 'O', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', '.', '.']
    ],
  
  "1" : [
      ['.', '.', 'O', 'O', 'O', '.', '.', '.'],
      ['.', '.', '.', 'O', 'O', '.', '.', '.'],
      ['.', '.', '.', 'O', 'O', '.', '.', '.'],
      ['.', '.', '.', 'O', 'O', '.', '.', '.'],
      ['.', '.', '.', 'O', 'O', '.', '.', '.'],
      ['.', '.', 'O', 'O', 'O', 'O', '.', '.']
    ],
    
  "2" : [
      ['.', 'O', 'O', 'O', 'O', 'O', '.', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', '.', '.', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.']
    ],
    
  "3" : [
      ['.', 'O', 'O', 'O', 'O', 'O', '.', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', '.', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.']
    ],
  
  "4" : [
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.']
    ],
  
  "5" : [
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', '.', '.', '.'],
      ['.', 'O', 'O', '.', '.', '.', '.', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.']
    ],
    
  "6" : [
      ['.', '.', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', '.', '.', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', '.', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.']
    ],
  
  "7" : [
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', '.', '.', '.', 'O', 'O', '.', '.'],
      ['.', '.', '.', 'O', 'O', '.', '.', '.'],
      ['.', '.', '.', 'O', 'O', '.', '.', '.']
    ],
    
  "8" : [
      ['.', 'O', 'O', 'O', 'O', 'O', '.', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', '.', 'O', 'O', 'O', 'O', '.', '.'], 
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.']
    ],
    
  "9" : [
      ['.', '.', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', 'O', '.'],
      ['.', '.', '.', '.', '.', 'O', 'O', '.'],
      ['.', 'O', 'O', 'O', 'O', 'O', '.', '.']
    ],
    
  ":" : [
      ['.', '.', '.', '.'],
      ['.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.'],
      ['.', '.', '.', '.'],
      ['.', 'O', 'O', '.'],
      ['.', 'O', 'O', '.']
    ]
}
hr = 12
mn = 31
sc = 12

def timeString(hour, minute, seconds):
  
  if hour > 12:
    hour = hour % 12
  
  return "{}:{:02d}:{:02d}".format(hour, minute, seconds)

print(timeString(hr, mn, sc))

def displayArgs(string):
  argtuple = []
  if len(string) ==  7:
    argtuple.append(displaydict["lead"])
  
  for item in string:
    argtuple.append(displaydict[item])
      
  return tuple(argtuple)
  
def display(args):

  zipped = list(zip(*args))

  flat_list = [[item for sublist in row for item in sublist] for row in zipped]
      
  return flat_list
  



#dotrow = display(dotties)
#print(dotrow[::1])
print(time.strftime("%H:%M:%S", time.localtime()))
x = 0
while True:
  dotties = displayArgs(time.strftime("%H:%M:%S", time.gmtime()))
  dotrow = display(dotties)
  for row in dotrow:
    for i, item in enumerate(row):
      if item == 'O':
        row[i] = "\u2588"
      else:
        row[i] = "\u0020"
      
  for row in dotrow:
    print(''.join(row))
    time.sleep(.05)
  print("\n\n")
  #sc+=1
  x += 1
  time.sleep(0.72)

